P(C1)=6/10 P(C2)=4/10
We have 10 entries where 6 of them are C1 and 4 are C2

Table for positive:
P(C1) = 6/10
P(great | C1) = 4/6
P(happy | C1) = 6/6
P(bad | C1) = 3/6
P(return | C1) = 1/6

Table for negative:
P(C2) = 4/10
P(great | C2) = 2/4
P(happy | C1) = 1/4
P(bad | C1) = 3/4
P(return | C1) = 3/4

To get these I used a pandas df to find whether or not a review had great, happy, bad, or return in it.
I then added up 0-5 to get C1 and 6-9 to get C2
The data frame looked like this:
Pos:
  great happy bad return
0     0     1   1      0
1     1     1   0      1
2     1     1   1      0
3     1     1   0      0
4     1     1   1      0
5     0     1   0      0
Neg:
  great happy bad return
6     0     0   1      1
7     1     0   1      0
8     1     1   1      1
9     0     0   0      1

For test case 1 I found the number of great, happy, bad, and return in it. This gave me:
Great: 1 Happy: 0 Bad: 1 Return: 1
We can plug this into the table to get the P for C1 and C2
P(C1 | Test1) = 6/10*(4/6)^1*(6/6)^0*(3/6)^1*(1/6)^1 = .033
P(C2 | Test1) = 4/10*(2/4)^1*(1/4)^0*(3/4)^1*(3/4)^1 = .11
Since P(C2 | Test1) is greater we can say that Test 1 would be a negative review


For test case 2 I found the number of great, happy, bad, and return in it. This gave me:
Great: 1 Happy: 1 Bad: 1 Return: 1
We can plug this into the table to get the P for C1 and C2
P(C1 | Test1) = 6/10*(4/6)^1*(6/6)^1*(3/6)^1*(1/6)^1 = .033
P(C2 | Test1) = 4/10*(2/4)^1*(1/4)^1*(3/4)^1*(3/4)^1 = .028
Since P(C1 | Test2) is greater we can say that Test 2 would be a positive review